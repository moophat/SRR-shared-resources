name: Reverse Upstream Sync – Pull from Consumer

on:
  repository_dispatch:
    types: [push-upstream]

jobs:
  reverse-upstream:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout shared-resources repo
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          mkdir -p $HOME/bin
          curl -L https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o $HOME/bin/yq
          chmod +x $HOME/bin/yq

      - name: Extract consumer name
        id: extract
        run: echo "consumer=${{ github.event.client_payload.consumer }}" >> $GITHUB_OUTPUT

      - name: Read consumer repo from config
        id: config
        run: |
          CONFIG=".github/consumer-config.yml"
          CONSUMER="${{ steps.extract.outputs.consumer }}"
          echo "REPO=$(yq e ".\"$CONSUMER\".repo" "$CONFIG")" >> $GITHUB_ENV

      - name: Clone consumer repo and push split branches
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          set -e

          # Clone consumer using PAT
          git clone "https://${GH_PAT}@${REPO#https://}" consumer
          cd consumer
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout main

          CONFIG="../.github/consumer-config.yml"
          CONSUMER="${{ steps.extract.outputs.consumer }}"

          # Parse and process folder mappings
          yq e ".\"$CONSUMER\".folders" "$CONFIG" | \
            yq e 'to_entries | .[] | .key as $k | .value as $v | [$v, $k] | @tsv' - \
            | while IFS=$'\t' read -r local_path shared_folder; do

              echo "Splitting $local_path → $shared_folder"
              BRANCH_NAME="tmp-upstream-split-$shared_folder"
              TARGET_BRANCH="from-${CONSUMER}-${shared_folder}"

              # Do subtree split
              git subtree split --prefix="$local_path" -b "$BRANCH_NAME"

              # Verify split worked
              git show-ref --verify --quiet "refs/heads/$BRANCH_NAME" || {
                echo "❌ Branch $BRANCH_NAME not created, skipping"
                continue
              }

              # Push directly from here to shared-resources
              echo "Pushing $BRANCH_NAME → $TARGET_BRANCH"
              git push -f "https://${GH_PAT}@github.com/moophat/SRR-shared-resources.git" "$BRANCH_NAME:$TARGET_BRANCH"
          done
