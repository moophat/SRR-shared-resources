name: Populate Downstream

on:
  push:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout shared repo
        uses: actions/checkout@v3

      - name: Install yq (Go version)
        run: |
          mkdir -p $HOME/bin
          curl -L https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -o $HOME/bin/yq
          chmod +x $HOME/bin/yq
        shell: bash
      
      - name: Add yq to PATH
        run: echo "$HOME/bin" >> $GITHUB_PATH

      - name: Run downstream sync
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          set -e

          CONFIG="$GITHUB_WORKSPACE/.github/consumer-config.yml"
          TMPDIR=$(mktemp -d)

          # Pre-split all folders needed by any consumer
          for folder in $(yq e '.. | select(has("folders")) | .folders | keys | .[]' "$CONFIG" | sort -u); do
            echo "üå≤ Splitting shared folder: $folder"
            git subtree split --prefix="$folder" -b "split-$folder"
          done

          for consumer in $(yq e 'keys | .[]' "$CONFIG"); do
            REPO=$(yq e ".\"$consumer\".repo" "$CONFIG")
            echo "üîÑ Syncing consumer: $consumer ($REPO)"

            # Clone consumer repo once
            cd "$TMPDIR"
            git clone "https://${GH_PAT}@${REPO#https://}" "$consumer"
            cd "$consumer"
            # Set git identify for this folder,whatever
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            
            # go into the sync-auto branch of the consumer repo do do our fucking magic
            # could try checkout from the main branch to avoid any driff, otherwise just update the sync-auto branch
            #git fetch origin main
            #git checkout -B sync-auto origin/main

            git checkout -b sync-auto || git checkout sync-auto

            # Link back to shared repo to fetch split branches
            git remote add shared "$GITHUB_WORKSPACE"
            git fetch shared

            # Loop through folders
            for folder in $(yq e ".\"$consumer\".folders | keys | .[]" "$CONFIG"); do
              TARGET_PATH=$(yq e ".\"$consumer\".folders.\"$folder\"" "$CONFIG")
              echo "üì¶ Injecting $folder ‚Üí $TARGET_PATH"

              cd "$TMPDIR/$consumer"
              

              #create IF NOT exist
              mkdir -p "$TARGET_PATH"

              # Remove all previous files from target path before injection, to ensure deletions sync correctly
              rm -rf "$TARGET_PATH"/*
              
              # set the DESTINATION folder using git checkout using work-tree, but this WILL cause us to lose the bloody commit history on this folder (of the shared repo), only lastest data is retain
              git --work-tree="$TARGET_PATH" checkout "shared/split-$folder" -- .

            done
            # can use git add . in the above loop to only add the shared folder, but fuck it we checked out from main right
            git add -A .
            git commit -m "[auto-sync][$consumer] update shared folders" || echo "‚ö†Ô∏è Nothing to commit"
            #git push -f origin HEAD:sync-auto
            git push -f origin sync-auto
            git ls-remote --heads origin

            cd "$TMPDIR"
          done
